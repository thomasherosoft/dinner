<!DOCTYPE html>
<html>
<head>
  <title>YoYo</title>
  <!-- <script src="//maps.google.com/maps/api/js?v=3.13&sensor=false&libraries=geometry,places" type="text/javascript"></script> -->
  <script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'jquery.min.js', 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <%= stylesheet_link_tag '//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css' %>
  <%= javascript_include_tag '//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js' %>

  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <meta charset="utf-8">
  <style>
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
    }
    #map {
      height: 720px;
      width: 910px;
        background-color: rgb(229, 227, 223);
      }
  </style>
</head>
<body>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBehET1sfpRkVZCziSH2QE_p96KCMbU5Rc&signed_in=true&libraries=geometry,places&callback=initMap"
      async defer>
  </script>
  <script>
function initMap() {
var map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: 51.5249272, lng: -0.1959224},
  zoomControl: true,
  zoom: 10
});
var infoWindow = new google.maps.InfoWindow({map: map});
var places = new google.maps.places.PlacesService(map);
var distance = new google.maps.DistanceMatrixService;

var reqCounter = 0;
function getPlaceInfo(place, callback) {
  function save(data) {
    var rating = data.rating || 0;
    rating = Math.floor(10000 * rating / 5.0) / 100;
    rating = rating > 1 ? Math.floor(rating) + '%' : 'N/A'
      $('.item-widget[data-id="' + place.id + '"] .item-rating').text(rating);
    if (!data.photos) { return callback(null) }
    var photo = data.photos[0];
    var url = photo ? photo.getUrl({maxWidth: 800}) : null;
    $.post('/posts/' + place.id + '/info', {
      phone: data.formatted_phone_number,
      photo: url,
      placeid: data.place_id,
      rating: rating
    });
    callback(url);
  }

  console.debug('searching for', place.name, ++reqCounter);
  if (place.placeid) {
    places.getDetails({placeId: place.placeid}, function(data, status) {
      if (status === google.maps.places.PlacesServiceStatus.OK) {
        save(data);
      } else {
        callback(null);
      }
    });
  } else {
    places.textSearch({query: place.name, location: {lat: parseFloat(place.longitude), lng: parseFloat(place.latitude)}, radius: 100, types: ['restaurant']}, function(ary, status){
      if (status === google.maps.places.PlacesServiceStatus.OK) {
        if (ary.length) {
          save(ary[0]);
        } else {
          callback(null);
        }
      } else {
        callback(null);
      }
    })
  }
}

function updateWidgets() {
  $('.item-widget[data-id]:not(.js-place-updated)').each(function(){
    var $this = $(this);
    $this.addClass('js-place-updated');
    getPlaceInfo($this.data(), function(url){
      if (url) {
        $this.find('.item-image').attr('src', url);
      }
    })
  })
}

updateWidgets();

var showInfo = function(point) {
  if (point.target) {
    point = $(this).parents('.item-widget').data();
  }

  var show = function(imageurl, cost) {
    var img = imageurl ? '<img src="' + imageurl + '" style="margin:5px 5px 0 0;max-height:70px">' : '';
    var html = '<table><tr><td style="vertical-align:top">' + img + '</td><td>';
    html += point.name + '<br>';
    html += point.address + '<br>';
    html += point.phone + '<br>';
    html += '<%= image_tag("uber.jpg", style: "max-height: 13px") %> Â£' + cost;
    html += '</td></tr></table>';
    infoWindow.setContent(html);
    infoWindow.open(map, markers[+point.id]);
  }

  distance.getDistanceMatrix({
    origins: [myPos],
    destinations: [{lat: parseFloat(point.longitude), lng: parseFloat(point.latitude)}],
    travelMode: google.maps.TravelMode.DRIVING
  }, function(result, status){
    var dist = result.rows[0];
    var cost = null;
    if (dist && dist.elements[0]) {
      dist = dist.elements[0];
      var miles = dist.distance.value / 1609;
      if (miles <= 50) {
        var time = miles / 9 * 60;
        console.debug(dist, 'miles', miles, 'minutes', time);
        cost = Math.round(2.5 + 1.25*miles + 0.25*time);
        if (cost < 5) cost = 5;
      }
    }

    $.getJSON('/posts/' + point.id + '/info')
      .done(function(x){
        if (x.photo) {
          show(x.photo, cost)
        } else {
          getPlaceInfo(point, function(x) { show(x, cost) })
        }
      })
      .fail(function(x){
        getPlaceInfo(point, function(x) { show(x, cost) })
      })
  });
}

$(document).on('click', '.item-widget[data-id] .js-show-location', showInfo);

var markers = {}
$.getJSON(location.toString(), function(data){
  data.forEach(function(point, idx){
    var position = {lat: parseFloat(point.longitude), lng: parseFloat(point.latitude)};
    var marker = markers[point.id] = new google.maps.Marker({
      position: position,
      map: map,
      title: point.name
    });

    marker.addListener('mouseover', function() {
      showInfo(point)
    });
    marker.addListener('mouseout', function(){
      // infoWindow.close()
    })
  });

  var updateData = function() {
    var widgets = $('.item-widget[data-id]');
    $('#results-count').text(widgets.length);
    var clear = Object.keys(markers);
    widgets.each(function(){
      var $w = $(this), id = +$w.data('id'), x = clear.indexOf(id);
      if (x > -1) {
        markers[id].setMap(map);
        clear.splice(x, 1)
      } else {
        var position = {lat: parseFloat($w.data('longitude')), lng: parseFloat($w.data('latitude'))};
        markers[id] = new google.maps.Marker({
          position: position,
          map: map,
          title: $w.data('name')
        });
      }
    });
    clear.forEach(function(id){
      markers[id].setMap(null);
    })
  }

  $(document).on('change', '.filter-status', function (e) {
    var data = $(this).closest('form').serialize();
    $('.search-result > .row').load('/?' + data, updateData);
    history.pushState(null, null, '/?' + data);
    $('.js-show-more').show();
  });

  $('.js-show-more').on('click', function(){
    var link = $(this);
    var title = link.text();
    var items = $('.item-widget').length;
    var page = Math.floor(items/20);
    if ((items % 20) > 0) {
      link.hide()
    } else {
      link.text('Loading...');
      var url = location.toString();
      url += url.indexOf('?') > -1 ? '&' : '?'
      url += '&page=' + (page+1)
      $.ajax({
        dataType: 'html',
        url: url
      }).done(function(html){
        $('.search-result > .row').append(html);
        updateData();
        updateWidgets();
        link.text(title);
        if (($('.item-widget').length % 20) > 0) {
          link.hide();
        }
      })
    }
  });
});


// Try HTML5 geolocation.
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(function(position) {
    myPos = {
      lat: position.coords.latitude,
      lng: position.coords.longitude
    };

    // infoWindow.setPosition(pos);
    // infoWindow.setContent('Location found.');
    map.setCenter(myPos);
    infoWindow.close();
  }, function() {
    handleLocationError(true, infoWindow, map.getCenter());
  });
} else {
  // Browser doesn't support Geolocation
  handleLocationError(false, infoWindow, map.getCenter());
}
}

function handleLocationError(browserHasGeolocation, infoWindow, pos) {
infoWindow.setPosition(myPos);
infoWindow.setContent(browserHasGeolocation ?
                      'Error: The Geolocation service failed.' :
                      'Error: Your browser doesn\'t support geolocation.');
}

  </script>
    <form class="navbar-form navbar-left" role="search" style="width: 100%">
      <a class="logo" href="/">YoYo</a>
      <div class="header-right">
        <a class="blog" href="blog">Blog</a>
        <a class="blog" href="blog">I Want An App!</a>
        <ul class="social-icons">
              <li><a href="www.facebook.com" class="fb-icon" target="_blank"></a></li>
              <li><a href="www.twitter.com" class="tw-icon" target="_blank">  </a></li>
        </ul>
      </div>
      <%= form_tag(posts_path, :method => "get", class: "form-control", id: "search-form") do %>
        <%= text_field_tag :search, params[:search], class: "form-control", style: "width: 320px", placeholder: "Search Restaurant Name" %>
        <% end %>
      <%= yield %>
    </body>
    </form>
  </div><!-- /.container-fluid -->
</html>
