<!DOCTYPE html>
<html>
<head>
  <title>YoYo</title>
  <!-- <script src="//maps.google.com/maps/api/js?v=3.13&sensor=false&libraries=geometry,places" type="text/javascript"></script> -->
  <script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'jquery.min.js', 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <%= stylesheet_link_tag '//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css' %>
  <%= javascript_include_tag '//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js' %>

  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <meta charset="utf-8">
  <style>
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
    }
    #map {
      height: 720px;
      width: 910px;
        background-color: rgb(229, 227, 223);
      }
  </style>
</head>
<body>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBehET1sfpRkVZCziSH2QE_p96KCMbU5Rc&signed_in=true&libraries=geometry,places&callback=initMap"
      async defer>
  </script>
  <script>
function initMap() {
var map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: 51.5249272, lng: -0.1959224},
  zoom: 10
});
var infoWindow = new google.maps.InfoWindow({map: map});
var places = new google.maps.places.PlacesService(map);

function getPlaceInfo(place, callback) {
  console.debug('searching for', place.name + ' ' + place.address, place);
  places.textSearch({query: place.name + ' ' + place.address, location: {lat: parseFloat(place.longitude), lng: parseFloat(place.latitude)}, radius: 100, types: ['restaurant']}, function(ary, status){
    if (status === google.maps.places.PlacesServiceStatus.OK) {
      if (ary.length) {
        var data = ary[0];
        var rating = data.rating || 0;
        console.debug("rating for", name, data.rating);
        rating = Math.floor(10000 * rating / 5.0) / 100;
        $.post('/posts/' + place.id + '/rating', {data: rating});
        $('.item-widget[data-id="' + place.id + '"] .item-rating').text(rating + '%');
        if (!data.photos) { return callback(null) }
        var photo = data.photos[0];
        if (!photo) { return callback(null) }
        var img = new Image()
        img.crossOrigin = 'Anonymous';
        img.onload = function () {
          var canvas = document.createElement('canvas');
          var ctx = canvas.getContext('2d');
          ctx.height = this.height;
          ctx.width = this.width;
          ctx.drawImage(this, 0, 0);
          var uri = canvas.toDataURL('image/png');
          $.post('/posts/' + place.id + '/image', {data: uri});
          callback(uri);
          canvas = null;
        }
        img.src = photo.getUrl({maxWidth: 800});
      } else {
        callback(null);
      }
    } else {
      callback(null);
    }
  })
}

$('.item-widget[data-id]').each(function(){
  var $this = $(this)
  getPlaceInfo($this.data(), function(uri){
    if (uri) {
      console.debug('loaded image for', $this.data('name'));
      $this.find('.item-image').attr('src', uri);
    } else {
      console.debug('no image for ', $this.data('name'))
    }

  })
})

var markers = {}
$.getJSON(location.toString(), function(data){
  data.forEach(function(point){
    var position = {lat: parseFloat(point.longitude), lng: parseFloat(point.latitude)};
    var marker = markers[point.id] = new google.maps.Marker({
      position: position,
      map: map,
      title: point.name
    });

    var showInfo = function() {
      var show = function(imageurl) {
        var img = imageurl ? '<img src="' + imageurl + '" style="float:left;margin-right:5px;max-height:60px">' : ''
        infoWindow.setContent(img + '<div>' + point.name + '<br>' + point.address);
        infoWindow.open(map, marker);
      }

      if (point.imageurl) {
        show(point.imageurl)
      } else {
        $.getJSON('/posts/' + point.id + '/image')
          .done(function(x){
            show(x.data)
          })
          .fail(function(x){
            getPlaceInfo(point, show)
          })
      }
    }

    $('.item-widget[data-id="' + point.id + '"]').on('click', '.js-show-location', showInfo);

    marker.addListener('mouseover', showInfo);
    marker.addListener('mouseout', function(){
      infoWindow.close()
    })
  });

  $(document).on('change', '.filter-status', function (e) {
    var data = $(this).closest('form').serialize();
    $('.search-result').load('/?' + data + ' .search-result > *', function(){
      var clear = Object.keys(markers);
      $('.item-widget[data-id]').each(function(){
        var $w = $(this), id = +$w.data('id'), x = clear.indexOf(id);
        if (x > -1) {
          markers[id].setMap(map);
          clear.splice(x, 1)
        } else {
          var position = {lat: parseFloat($w.data('longitude')), lng: parseFloat($w.data('latitude'))};
          markers[id] = new google.maps.Marker({
            position: position,
            map: map,
            title: $w.data('name')
          });
        }
      });
      clear.forEach(function(id){
        markers[id].setMap(null);
      })
    });

    history.pushState(null, null, '/?' + data);
  });
});


// Try HTML5 geolocation.
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(function(position) {
    var pos = {
      lat: position.coords.latitude,
      lng: position.coords.longitude
    };

    // infoWindow.setPosition(pos);
    // infoWindow.setContent('Location found.');
    map.setCenter(pos);
    infoWindow.close();
  }, function() {
    handleLocationError(true, infoWindow, map.getCenter());
  });
} else {
  // Browser doesn't support Geolocation
  handleLocationError(false, infoWindow, map.getCenter());
}
}

function handleLocationError(browserHasGeolocation, infoWindow, pos) {
infoWindow.setPosition(pos);
infoWindow.setContent(browserHasGeolocation ?
                      'Error: The Geolocation service failed.' :
                      'Error: Your browser doesn\'t support geolocation.');
}

  </script>
    <form class="navbar-form navbar-left" role="search" style="width: 100%">
      <a class="logo" href="/">YoYo</a>
      <div class="header-right">
        <a class="blog" href="blog">Blog</a>
        <a class="blog" href="blog">I Want An App!</a>
        <ul class="social-icons">
              <li><a href="www.facebook.com" class="fb-icon" target="_blank"></a></li>
              <li><a href="www.twitter.com" class="tw-icon" target="_blank">  </a></li>
        </ul>
      </div>
      <%= form_tag(posts_path, :method => "get", class: "form-control", id: "search-form") do %>
        <%= text_field_tag :search, params[:search], class: "form-control", style: "width: 320px", placeholder: "Search Restaurant Name" %>
        <% end %>
      <%= yield %>
    </body>
    </form>
  </div><!-- /.container-fluid -->
</html>
